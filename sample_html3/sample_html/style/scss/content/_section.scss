// content-area 영역 안 style 소단위
.grid-area:not(.row) {
  @include gridArea();
  .top-fixed & {
    gap: 0;
  }
  .grid & {
    height: 1fr;
  }
  &.row {
    @include gridArea(1, 100%);
  }
}
.table-grid {
  @include gridArea(2, 1fr);
  grid-template-rows: 1fr;
  &.info {
    grid-auto-flow: dense;
    .header-area + & {
      margin-top: $table-gap-spacer;
    }
  }
  .table-area {
    &.full {
      grid-column: 1 / span 2;
    }
    &.row {
      grid-row-end: span 2;
    }
  }
  .fixed-full & {
    height: 100%;
    grid-template-rows: repeat(auto-fit, minmax(200px, 1fr));
  }
}
.map-area {
  position: relative;
  &::before {
    content: "";
    display: block;
    overflow: hidden;
    width: auto;
    height: 100%;
  }
  .map-wrap {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
  }
  .map-info {
    position: absolute;
    z-index: 1;
    top: $map-info-spacer;
    left: $map-info-spacer;
    // right: $map-info-spacer;
    width: $map-info-width;
    height: $map-info-height;
    border-radius: $radius-dialog;
    background-color: $bg-map-info-color;
    padding: $map-info-in-spacer;
    color: $txt-map-info-color;
    @include directionAlign(full, full);
  }
}
.map-info {
  line-height: 1;
  .cont-head {
    @include flexBoxContAlignX(space-around);
    gap: $map-info-spacer;
    .port-info {
      @include flexBoxContAlignX();
      gap: $spacer-base;
    }
    .icon-item {
      @include flexBoxContAlign();
    }
    [class*="fi"] {
      @include flagIconSize($icon-flag-head-width);
      border-radius: $radius-sm;
      border-color: $color-gray;
    }
  }
  .cont-body {
    @include flexBoxContAlignX(space-around);
    gap: $map-info-spacer;
  }
  .icon-item {
    width: 40px;
  }
  .port-info,
  .info-item {
    $cont-width: $map-info-width - ($map-info-spacer * 5);
    $map-info-cont-width: math.div($cont-width, 3);
    min-width: $map-info-cont-width;
  }
  .info-item {
    row-gap: 0;
  }
}
.info-item {
  display: grid;
  grid-template-columns: $icon-info-size 1fr;
  align-items: center;
  gap: $spacer-base;
  .icon-info {
    grid-area: span 2 / 1;
    margin-right: $spacer-base;
  }
  .txt-cont {
    display: flex;
    gap: $spacer-base;
  }
  .transport-info & {
    .txt-port {
      flex: auto;
      padding-left: $icon-form-txt-size + $btn-spacer;
    }
    .actual {
      @include iconAddPosition(left, transport-info-actual);
    }
    .estim {
      @include iconAddPosition(left, transport-info-estim);
    }
    .trans-info {
      .txt-cont {
        flex: auto;
        justify-content: space-around;
      }
    }
  }
  .truck-info & {
    @include flexBoxContAlign(stretch, top);
    .info-head {
      @include flexBoxContAlignX();
      min-width: $truck-info-name-width;
    }
    .info-list {
      justify-content: stretch;
      width: 100%;
    }
  }
  .summary-area.row & {
    display: flex;
    flex: 1;
    flex-direction: column;
    padding-top: $map-info-spacer;
    padding-bottom: $map-info-spacer;
    gap: $spacer-base * 2;
    &:not(:first-child) {
      border-left: $line-light-hr;
    }
    .icon-info {
      margin-right: 0;
    }
  }
  .summary-area:not(.row) & {
    flex: 0 1 auto;
    grid-column-gap: $spacer-md;
    min-width: $summary-vest-min-width;
  }
  .steps-area & {
    display: flex;
    gap: $spacer-xs;
  }
  .panl-box:not(.row) & {
    gap: 0 $spacer-base * 2;
  }
  .panl-list & {
    @include flexBoxContAlignX(full);
    gap: $spacer-base * 1.5;
    .icon-info {
      margin: 0;
    }
  }
}
.map-info {
  .info-item + .info-item {
    position: relative;
    &::before {
      @include addBorderCenter(
        left,
        $map-info-spacer,
        $line-white-hr,
        -$map-info-spacer
      );
    }
  }
}
// 운송
.transport-info,
.transport-visual {
  position: relative;
}
.transport-info {
  @include flexDirection;
  gap: $spacer-base;
  .cont-head {
    @include flexBoxContAlignX(full);
  }
  .cont-body {
    @include flexDirection;
    gap: $spacer-base;
  }
  .info-item {
    @include flexBoxContAlignX(full);
  }
  .btn-favor {
    position: absolute;
    left: 0;
    top: 0;
  }
}
.truck-info {
  position: absolute;
  right: -($transport-info-width - ($progress-gap-width * 0.75));
  top: 0;
  z-index: 10;
  padding: 0 $progress-gap-width 0 ($progress-gap-width * 2);
  @include flexDirection;
  justify-content: center;
  gap: $spacer-md;
  width: $transport-info-width;
  height: 100%;
  @include transMotion(right);
  .btn-info {
    position: absolute;
    top: ($progress-gap-width * 0.25);
    left: 0;
    @include Opacity(100);
    &::before {
      margin-right: 0;
    }
  }
  .info-item {
    @include Opacity(0);
  }
  .info-list {
    .transport-area.store & {
      @include gridArea(2, 1fr);
      gap: $spacer-xs $spacer-base;
      align-items: center;
    }
    li {
      display: flex;
      align-items: center;
      padding-left: $spacer-base;
      position: relative;
      &::before {
        content: "";
        @include positionCenter(left);
        display: inline-block;
        @include circleIcon($color-dark, $radius-xs);
        left: 2px;
      }
    }
  }
  &.active {
    z-index: 0;
    right: 0;
    &::after {
      @include addBorderCenter(left, 100%, $line-light-hr, $progress-gap-width);
    }
    &::before {
      content: "";
      display: block;
      position: absolute;
      right: 0;
      top: 0;
      background-color: $color-white;
      @include shapeSize(calc(100% - $progress-gap-width), 100%);
    }
    .btn-info {
      @include Opacity(30);
    }
    .info-item {
      @include Opacity(100);
    }
  }
}
.summary-body {
  .transport-info {
    .cont-head {
      @include flexDirection;
    }
    &:nth-child(odd) {
      &,
      .cont-head,
      .cont-body {
        align-items: flex-start;
      }
    }
    &:nth-child(even) {
      &,
      .cont-head,
      .cont-body {
        align-items: flex-end;
      }
    }
  }
}
.transport-visual {
  $btn-point: math.div($icon-circle-arr-size, 2);
  .btn-prev {
    @include iconToBtnChange(icon-circle-prev);
    @include contTransCenterX(left, -$btn-point);
  }
  .btn-next {
    @include iconToBtnChange(icon-circle-next);
    @include contTransCenterX(right, -$btn-point);
  }
}
.port-name {
  @include formBoxStyle($progress-bar-height, $line-label-base);
  background-color: $color-white;
  .txt-port {
    @include textEllipsis;
  }
  .progress-area &,
  .port-list & {
    width: $port-name-width;
    min-height: $port-name-height;
  }
  .IBCellBase > & {
    width: $port-name-width - $progress-bar-height;
  }
  .IBCellBase & {
    border-color: $port-point-color;
    box-shadow: inset 0 0 0 1px $port-point-color;
    .txt-port {
      color: $port-point-color;
    }
  }
  &.port-gy,
  &.port-ph {
    .txt-port {
      color: $color-white;
    }
  }
  &.port-gy {
    background-color: $port-gy-color;
    border-color: $port-gy-color;
    box-shadow: none;
  }
  &.port-ph {
    background-color: $port-ph-color;
    border-color: $port-ph-color;
    box-shadow: none;
  }
  &.store-port {
    width: $store-name-width;
  }
  &.port-route,
  &.store-port {
    &:not(.port-gy):not(.port-ph) {
      border-color: $port-route-color;
      box-shadow: inset 0 0 0 1px $port-route-color;
      .txt-port {
        color: $port-route-color;
      }
    }
  }
  .port-active &,
  &.port-active {
    &:not(.port-gy):not(.port-ph) {
      border-color: $port-point-color;
      box-shadow: inset 0 0 0 1px $port-point-color;
      .txt-port {
        color: $port-point-color;
      }
    }
  }
}
.progress-area {
  .route &,
  .store & {
    padding-top: $spacer-md;
  }
  .path-list {
    position: relative;
    display: inline-flex;
    height: 100%;
    align-items: center;
    &::before {
      @include addBorderCenter(top, 100%, $line-bg-progress, 50%);
    }
  }
  .port-area {
    @include portArea(progress, auto);
    .port-icon {
      height: $icon-port-height;
    }
    .port-icon.anchor,
    .port-icon.berth,
    .port-icon.departure,
    .port-icon.dock,
    .port-name {
      position: relative;
      &:hover {
        .alert-area,
        .tooltip-area {
          display: block;
        }
      }
    }
    .store & {
      width: auto;
    }
    .route &,
    .store & {
      padding-bottom: 0;
      margin-right: 0 !important;
      position: relative;
      &.active,
      &.store-bourne {
        .port-name {
          &::before {
            position: absolute;
            bottom: $progress-bar-height;
          }
        }
      }
      &.active {
        .port-name {
          @include txtIconAdd(left, icon-port-route);
          &::before {
            left: 40%;
          }
        }
      }
      &.store-bourne {
        .port-name {
          @include txtIconAdd(left, icon-store-bourne);
        }
      }
      &.store-in {
        .store-port {
          @include txtIconAdd(left, icon-store-in);
        }
      }
      &.store-move {
        .store-port {
          @include txtIconAdd(left, icon-store-move);
        }
      }
      &.store-out {
        .store-port {
          @include txtIconAdd(left, icon-store-out);
        }
      }
      .store-port {
        &::before {
          position: absolute;
          bottom: $progress-bar-height;
        }
      }
      .txt-cont,
      .txt-date,
      .txt-unit {
        line-height: 1;
      }
      .txt-date {
        position: absolute;
        top: $progress-bar-height + $spacer-xs;
      }
      .txt-cont {
        position: absolute;
        top: $progress-bar-height + $spacer-xs;
        display: flex;
        gap: $spacer-xs;
        align-items: center;
        .txt-date {
          position: static;
          white-space: nowrap;
        }
      }
      .txt-unit {
        margin-left: 0;
        font-size: $font-size-sm;
        font-weight: $font-weight-black;
        white-space: nowrap;
      }
      & + .port-area {
        margin-left: $spacer-base;
      }
    }
  }
  .progress-bar {
    width: 0;
    @include Opacity(0);
    padding-top: $icon-port-height;
    & + .port-area {
      margin-left: 0 !important;
    }
    &.on,
    .route &,
    .store & {
      position: relative;
      $bar-spacer: ($progress-bar-height - ($progress-path-gap-spacer * 2));
      @include Opacity(100);
      &::before,
      &::after {
        content: "";
        position: absolute;
        display: block;
        @include circleSize($progress-bar-height);
        background-color: $color-white;
      }
      &::before {
        left: -$bar-spacer;
        z-index: 5;
      }
      &::after {
        right: -$bar-spacer;
        z-index: 5;
      }
    }
    &.on {
      min-width: $progress-bar-width;
      &::before,
      &::after {
        top: $icon-port-height;
      }
    }
    .route & {
      min-width: $progress-bar-min-width;
      &.on {
        .icon-cont {
          width: 70%;
        }
      }
    }
    .store & {
      min-width: $progress-bar-width;
      &.on {
        .icon-cont {
          width: 60%;
        }
      }
      &.start {
        .icon-route {
          display: block;
          right: auto;
          left: 0;
        }
        .icon-cont {
          width: 0;
        }
      }
    }
    .route &,
    .store & {
      padding-top: 0;
      &::before,
      &::after {
        top: 0;
      }
      .icon-route {
        display: none;
      }
      .icon-cont {
        width: 0;
      }
      &.on {
        .icon-route {
          display: block;
        }
      }
    }
  }
  .trans-progress {
    &::before {
      content: "";
      display: block;
      height: $progress-bar-height;
      width: 100%;
      position: absolute;
      left: 0;
      top: $icon-port-height;
      background-color: $bg-product-color;
      .route &,
      .store & {
        top: 0;
      }
    }
    &::after {
      content: "";
      display: block;
      width: 100%;
      height: $progress-bar-height;
      @include positionCenter();
      @include Opacity(40);
    }
    @for $num from 0 through 10 {
      &[data-dist="#{$num}"] {
        &::after {
          @include bgDottwd($num, $color-white, 2px);
        }
      }
    }
    .icon-cont {
      position: relative;
      background-color: $product-color;
      @include boxRadius(right, $progress-bar-height);
    }
    @for $num from 0 through 20 {
      [data-role="#{$num}"] {
        .icon-ship {
          left: -$progress-bar-height;
          right: auto;
        }
      }
    }
    [data-role="100"] {
      @include boxRadius(right, 0);
    }
    .icon-ship {
      position: absolute;
      right: 0;
      bottom: $progress-bar-height + 1px;
    }
    .trans-info {
      height: $icon-port-height;
      justify-content: center;
      align-items: flex-start;
      padding-top: $progress-path-gap-spacer;
    }
    &.ship-product {
      &::before {
        background-color: $bg-product-color;
      }
      .icon-cont {
        background-color: $product-color;
      }
    }
    &.ship-stone {
      &::before {
        background-color: $bg-cargo-stone-color;
      }
      .icon-cont {
        background-color: $cargo-stone-color;
      }
    }
    &.ship-iron {
      &::before {
        background-color: $bg-cargo-iron-color;
      }
      .icon-cont {
        background-color: $cargo-iron-color;
      }
    }
    &.ship-coal {
      &::before {
        background-color: $bg-cargo-coal-color;
      }
      .icon-cont {
        background-color: $cargo-coal-color;
      }
    }
    &.route-road {
      &::after {
        @include bgDash(7, $color-white, 2px);
      }
      &::before {
        background-color: $bg-route-color;
      }
      .icon-cont {
        background-color: $route-color;
      }
    }
    &.route-ship {
      &::after {
        @include bgDottwd(5, $color-white, 2px);
      }
    }
    &.route-road,
    &.route-ship {
      .icon-route {
        position: absolute;
        right: -5px;
        // transform: translateX(-50%);
        bottom: $progress-bar-height + $spacer-xs;
      }
    }
  }
  .alert-area {
    width: math.div($port-tooltip-width, 2);
    left: -$icon-port-height;
    bottom: $icon-port-height + $progress-path-gap-spacer;
    @include alertStyle(info);
  }
  .tooltip-area {
    width: $port-tooltip-width;
    &:not(.right) {
      left: -$transport-gap-spacer;
      &::before {
        left: math.div($port-name-width, 2) + 10px;
      }
    }
    &.right {
      right: -$transport-gap-spacer;
      &::before {
        right: math.div($port-name-width, 2) + 10px;
      }
    }
    &.left {
      left: 0px !important;
      &::before {
        left: math.div($port-name-width, 2) - 10px !important;
      }
    }
    .txt-title {
      display: flex;
      align-items: center;
      white-space: nowrap;
      gap: $btn-icon-spacer;
    }
    .barge-cont {
      @include flexBoxContAlignX(space-evenly);
      padding: $icon-spacer;
      margin-bottom: $icon-spacer;
      border-bottom: $line-hr;
      .item {
        @include flexBox(center);
        flex: auto;
        gap: $default-spacer;
        &::before {
          content: "";
        }
        &.in::before {
          @extend .icon-ship-in;
        }
        &.out::before {
          @extend .icon-ship-out;
        }
        & + .item {
          border-left: $line-hr;
        }
      }
    }
    .info-list {
      display: grid;
      gap: $default-spacer;
      grid-template-columns: repeat(2, 1fr);
    }
    .trans-info {
      gap: $default-spacer;
      justify-content: flex-start;
    }
  }
  .transport-wrap .transport-area:not(:first-child) & {
    .tooltip-area {
      bottom: $progress-bar-height + ($progress-path-gap-spacer * 2);
    }
  }
  .transport-wrap .transport-area:first-child & {
    .tooltip-area {
      top: $progress-bar-height + ($progress-path-gap-spacer * 2);
      &::before {
        bottom: auto;
        top: -$icon-tooltip-height;
        transform: rotate(180deg);
      }
    }
  }
}

.route-area {
  @include flexDirection;
  gap: $spacer-md;
  .trans-progress {
    position: relative;
    padding-right: ($icon-ship-width - $icon-ship-height);
    height: $icon-ship-height;
    margin-top: $spacer-base;
    &::before {
      @include addBorderCenter(top, 100%, $line-bg-progress, 50%);
    }
    .icon-cont {
      position: relative;
      background-color: $color-white;
      height: $icon-ship-height;
      .icon-item {
        position: absolute;
        right: -($icon-ship-width + 1px);
        background-color: $color-white;
        box-shadow: $spacer-base 0 $spacer-xs $spacer-xs $color-white;
      }
      &::before {
        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        display: block;
        width: 100%;
        height: $spacer-xs;
        border-radius: $radius-sm;
        @include linearGradient(
          left,
          $secondary-color 80%,
          $progress-bar-end-color 100%
        );
      }
    }
    [data-role="0"] {
      &::before {
        display: none;
      }
    }
    [data-role="100"] {
      .icon-item {
        top: -10px;
        right: -($icon-ship-width - $icon-ship-height);
      }
    }
  }
  .info-list {
    padding-top: $spacer-sm;
    @include gridType($spacer-md);
    justify-content: space-between;
    .info-item {
      @include flexDirection;
      gap: 0;
      &:nth-child(odd) {
        align-items: flex-start;
      }
      &:nth-child(even) {
        align-items: flex-end;
      }
    }
  }
}
.status-area {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: flex-end;
  .progress-bar {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    overflow: hidden;
    width: 100%;
  }
  &.port-info {
    .progress-bar {
      height: $progress-bar-min-height;
      border-radius: $progress-bar-min-height;
    }
    .data-info {
      height: $progress-bar-min-height;
      border-radius: $progress-bar-min-height;
    }
    .ship-product {
      background-color: $bg-product-color;
      .data-info {
        background-color: $product-color;
      }
    }
    .ship-stone {
      background-color: $bg-cargo-stone-color;
      .data-info {
        background-color: $cargo-stone-color;
      }
    }
    .ship-iron {
      background-color: $bg-cargo-iron-color;
      .data-info {
        background-color: $cargo-iron-color;
      }
    }
    .ship-coal {
      background-color: $bg-cargo-coal-color;
      .data-info {
        background-color: $cargo-coal-color;
      }
    }
  }
  &.arrival-info {
    padding-left: $spacer-xs;
    padding-right: $spacer-xs;
    .progress-bar {
      height: 100%;
    }
    .data-info {
      position: relative;
      height: $icon-ship-height;
      width: 100%;
      &::before {
        @include addBorderStyle(top, auto, 50%, 100%, $line-bg-progress);
        right: 0;
      }
    }
    @include progressBarStep(day, 1, 8);
    [data-day="0"],
    [data-day="1"],
    [data-day="2"],
    [data-day="3"],
    [data-day="4"],
    [data-day="5"],
    [data-day="6"],
    [data-day="7"] {
      &::after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        // background-color: $color-white;
      }
    }
    [data-day="0"] {
      width: $table-row-height + $spacer-base;
      height: $table-row-height;
      &:before {
        display: none;
      }
      &::after {
        height: $table-row-height;
        width: $table-row-height;
        @include iconNameChange(ico_ship_anchor);
      }
    }
    [data-day="1"] {
      $sum: math.div($icon-ship-width, 5);
      &::before {
        width: calc(100% - ($icon-ship-width - $sum + $spacer-base));
      }
      &::after {
        transform: translateX(-$sum);
      }
    }
    [data-day="2"],
    [data-day="3"],
    [data-day="4"],
    [data-day="5"],
    [data-day="6"] {
      $sum: math.div($icon-ship-width, 4);
      &::before {
        width: calc(100% - ($icon-ship-width - $sum + $spacer-base));
      }
      &::after {
        left: 0;
        transform: translateX(-$sum);
      }
    }
    [data-day="7"]::before {
      width: calc(100% - ($icon-ship-width + $spacer-base));
    }
  }
}
.schedule-list {
  overflow-y: auto;
  .timeline-area & {
    padding: 0 $body-cont-spacer;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    .schedule-item {
      position: relative;
      display: flex;
      flex-direction: column;
      flex: 1 1 0;
      min-height: $timeline-date-min-height;
      padding-left: $timeline-date-width;
      &:last-child {
        .schedule-bar {
          .icon-cont,
          &::after {
            @include Opacity(0);
          }
        }
      }
    }
  }
  .icon-cont {
    background-color: $schedule-port-color;
  }
  .on {
    .schedule-bar::before {
      border-color: $schedule-port-on-color;
    }
    .icon-cont {
      background-color: $schedule-port-on-color;
    }
  }
  .off {
    .schedule-bar::before {
      border-color: $schedule-port-off-color;
    }
    .icon-cont {
      background-color: $schedule-port-off-color;
    }
  }
  .schedule-bar {
    position: absolute;
    top: 0;
    left: $timeline-date-width - $schedule-path-gap-spacer;
    height: 100%;
    padding-top: $schedule-head-height;
    &::before {
      content: "";
      display: block;
      border: 3px solid $schedule-port-color;
      @include circleSize($icon-legend-size);
      @include positionCenter(top, $schedule-path-gap-spacer);
    }
    &::after {
      @include addBorderStyle(
        left,
        1px,
        $schedule-head-height,
        calc(100% - $schedule-head-height),
        $line-bg-progress
      );
      z-index: -1;
    }
  }
  .cont-head,
  .cont-body {
    padding: $default-spacer $spacer-gap-group;
  }
  .cont-head {
    display: flex;
    align-items: center;
    height: $schedule-head-height;
    gap: $spacer-md;
    .txt-date {
      position: absolute;
      left: $spacer-gap-group * 2;
    }
  }
  .cont-body {
    display: grid;
    align-items: center;
    grid-template-columns: repeat(2, 1fr);
    gap: $schedule-path-gap-spacer;
  }
  .trans-info {
    justify-content: flex-start;
  }
}
.steps-area {
  padding: $spacer-sm;
  .badge-type {
    position: relative;
    display: inline-flex;
    gap: $spacer-xl;
    &::before {
      @include addBorderCenter(top, 100%, $line-bg-progress, 50%);
    }
    li:not(.badge-orange):not(.badge-green):not(.badge-blue) {
      @extend .badge-gray;
    }
  }
  .badge-blind {
    position: relative;
    &::after {
      content: "";
      display: block;
      position: absolute;
      top: -2px;
      left: -2px;
      width: calc(100% + $spacer-xl + 4px);
      height: calc(100% + 4px);
      background-color: $color-white;
    }
  }
  .port-list {
    display: inline-flex;
    height: $port-list-height;
    gap: $spacer-base;
    position: relative;
    &::before {
      @include addBorderCenter(
        top,
        100%,
        $line-bg-progress,
        ($port-name-height * 0.5)
      );
    }
    .port-area {
      @include portArea(list, $port-list-height);
      justify-content: flex-start;
    }
    .trans-info {
      gap: 0;
      width: $port-name-width - $spacer-sm;
      white-space: nowrap;
    }
    .txt-unit {
      margin-left: 0;
    }
  }
}
// iframe 알림리스트
.alert-list-area {
  @include flexBoxContAlign();
  width: 100%;
  height: 100%;
  .alert-item {
    padding: $spacer-base;
    @include flexBoxContAlignX(space-evenly);
    gap: $spacer-md;
    flex-wrap: wrap;
    box-sizing: border-box;
    width: 100%;
    max-width: 600px;
    max-height: 200px;
  }
  .ship-item {
    .txt-title {
      font-size: $font-size-md;
      text-align: center;
    }
  }
  .alert-list {
    @include gridType($spacer-sm, 2, 1fr);
    min-width: 200px;
    .info-item {
      line-height: 1;
      grid-template-columns: $icon-item-alert-size 1fr;
      gap: $spacer-xs $spacer-base;
      min-width: 100px;
      .icon-info {
        @include iconSizeChange($icon-item-alert-size);
      }
      .txt-label {
        @include textStyle($font-size-default, $color-smoky);
        text-transform: capitalize;
      }
      .txt-num {
        @include textStyle($font-size-xl, $info-color, block);
      }
    }
  }
}
